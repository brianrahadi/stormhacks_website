.container {
	--v-margin: var(--size-larger);

	--stormhacks-glow-inset: 100px;
	--stormhacks-glow-blur: 15px;

	--horizontal-line-offset-from-bottom: calc(1em * 0.61);
	--horizontal-line-width: 150%;
	--horizontal-line-occlusion-overlap: 2.5em;

	@include for-tablet {
		--horizontal-line-width: 133%;
	}

	@include for-mobile {
		--horizontal-line-width: 110%;
		--horizontal-line-occlusion-overlap: 0.5em;
	}
}

// Container for the logo and grapics.
.section.graphics {
	position: relative;
	display: flex;
	flex-direction: row-reverse;

	margin: var(--v-margin) 0;

	align-items: center;
	justify-content: center;

	@include for-tablet {
		gap: var(--size-small);
	}

	@include for-mobile {
		flex-direction: column;
		margin-top: var(--size-larger);
		gap: var(--size-larger);
	}
}

.themeGraphic {
	flex: 5 1 auto;
	margin: 0;

	svg {
		min-width: 100px;
		min-height: auto;
	}

	@include for-tablet {
		// Limit the width on tablet.
		width: 1vw;
		max-width: 200px;
	}

	@include for-mobile {
		// scale the width on mobile.
		margin: auto;
		width: 50vw;
		max-width: unset;
	}
}

// The vertical line to the left of the logo and graphic.
.logoBoxLineV,
.logoBoxLineH {
	position: absolute;
	z-index: $layout-z-foreground;
	opacity: 0.6;
}

.logoBoxLineV {
	bottom: var(--size-medium);
	width: 1px;

	background: linear-gradient(to bottom, transparent, var(--text-on-logo) 5% 90%, transparent 95%);

	top: calc(var(--size-larger) * -3.25);
	left: calc(var(--size-smaller) - 3px);

	@include for-tablet {
		top: calc(var(--size-larger) * -2);
		left: var(--size-smaller-2);
	}

	@include for-mobile {
		top: calc(var(--size-larger) * -0.5);
		left: var(--size-medium);
	}
}

.logoBoxLineH {
	width: var(--horizontal-line-width);
	height: 1px;
	bottom: var(--horizontal-line-offset-from-bottom);
	left: calc(var(--size-larger) * -1);

	background: linear-gradient(to right, transparent, var(--logo-subtitle) 5% 90%, transparent 95%);
}

.logoBoxLineV,
.logoBoxLineH,
.logoSubtitleLine {
	// Prevent page blowout.
	max-width: 100vw;
}

// The box containing the date/time and StormHacks logo.
.logoBox {
	flex: 0 0 auto;
	position: relative;
	font-size: 12pt;

	// Define clipping regions for the logo.
	$clip-left: 2%;
	$clip-left-where-text: 27%;
	$clip-top: 15%;
	$clip-bottom: 67%;
	$mobile-clip: 12pt;

	// Logo and its clipping box.
	.logo,
	.logoClipBox {
		// Only use as much space as needed.
		display: inline-block;
	}

	.logo > span,
	.logoSubtitle {
		white-space: nowrap;
		text-transform: uppercase;
	}

	.logoClipBox {
		clip-path: polygon(
			$clip-left $clip-top,
			100% $clip-top,
			100% $clip-bottom,
			$clip-left-where-text $clip-bottom,
			$clip-left-where-text 100%,
			$clip-left 100%
		);

		// Clip in a square for mobile.
		@include for-mobile {
			text-align: center;
			clip-path: inset(0 $mobile-clip $mobile-clip $mobile-clip);
		}
	}

	// "StormHacks"
	.logoStormhacksContainer {
		position: relative;

		.logo {
			position: relative;
			z-index: $layout-z-foreground-text;
			display: inline-flex;

			font-size: 4.55em;

			font-family: "Redaction";
			font-weight: bold;

			color: transparent;
			background: linear-gradient(to right, var(--logo-color), var(--logo-subtitle));
			background-clip: text;

			@include for-mobile {
				flex-direction: column;
				line-height: 0.8em;
			}
		}

		// The second instance, overlaid underneath the first one and blurred to use as a glow.
		.asGlow {
			user-select: none;
			pointer-events: none;

			position: absolute;
			inset: calc(var(--stormhacks-glow-inset) * -1);
			right: 0; // Prevents blowout.
			padding: var(--stormhacks-glow-inset);

			z-index: $layout-z-foreground-text - 1;
			filter: blur(var(--stormhacks-glow-blur));
			opacity: 0.5;
		}
	}

	// "Play your hand forward"
	.logoSubtitleContainer {
		font-size: 1.7em;
		color: var(--logo-subtitle);
		text-shadow: var(--logo-subtitle) 0px 0px 20px;

		// Place the text over the logo.
		position: relative;
		padding-left: $clip-left;
		top: -1em;
		right: 0;
		bottom: 0;

		// Align the line and text.
		display: flex;
		align-items: center;
		justify-content: right;

		// Add a line to occlude the horizontal yellow line overlapping the text.
		.logoSubtitleLine {
			position: absolute;
			left: calc(var(--horizontal-line-occlusion-overlap) * -1);
			width: calc(100% + var(--horizontal-line-occlusion-overlap) * 2);
			bottom: var(--horizontal-line-offset-from-bottom);
			height: 1px;

			background: linear-gradient(to right, transparent, var(--page-background-color) 10% 85%, transparent);
			z-index: $layout-z-foreground + 1;
		}

		.logoSubtitle {
			position: relative; // To constrain the line.
		}

		.logoSubtitleText {
			position: relative;
			z-index: $layout-z-foreground-text + 1;
		}

		// Remove the line and make it consume the full width on mobile.
		@include for-mobile {
			top: -10pt;
			padding: 0;
			font-size: 1.135em;

			justify-content: center;
		}
	}

	.logoSubtitle {
		font-family: "Redaction";
		font-weight: normal;
		text-align: right;

		margin: 0 0.2em;
	}

	// "May 20-21" ...
	.logoPlace {
		position: relative;
		bottom: -0.5em;
		padding: 0 $clip-left;
		font-family: "Redaction";

		z-index: $layout-z-foreground-text;

		.eventType,
		.eventLocation {
			font-style: italic;
		}

		@include for-mobile {
			font-size: 0.67em;
			bottom: 0.2em;
		}
	}

	// Change size on tablet.
	@include for-tablet {
		font-size: 1.7vw;
	}

	// Change padding on mobile.
	@include for-mobile {
		font-size: 4.7vw;
		text-align: center;

		.logoSubtitle,
		.aboutPlace {
			padding: 0 12pt;
		}
	}
}

// The buttons linking to the application forms.
.applyForms {
	position: relative;
	z-index: $layout-z-foreground;
	top: calc(var(--v-margin) * -1.5);
	left: 12px;

	.applyFormsButtons {
		display: flex;
		gap: var(--size-small);
		font-weight: 600;
	}

	.applyFormsLinks {
		margin-top: var(--size-small);
		font-size: 0.84em;
	}

	@include for-tablet {
		top: calc(max(-60px, var(--v-margin) * -1.5));
		left: 1.2vw;
	}

	@include for-mobile {
		text-align: center;
		left: 0;

		--button-padding: var(--size-medium);
		padding: var(--size-larger-2);
		padding-top: var(--size-larger);

		.applyFormsButtons {
			flex-direction: column;
		}

		.applyFormsLinks {
			margin-top: var(--size-larger);
			font-size: 1em;
		}
	}

	.applyButtonClosed {
		cursor: not-allowed;
	}
}

.section.stats {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;

	padding-top: var(--size-larger-2);
	font-size: 1.2em;

	// Adjust colors, padding, and positions of the stats boxes.
	.lastYear .statsBox {
		--box-background: var(--statsbox-lastyear-background);
		--box-border: var(--statsbox-lastyear-border);
		--box-text: var(--statsbox-lastyear-text);

		box-shadow: var(--statsbox-lastyear-border) 0px 0px 80px;
		--box-padding-h: var(--size-larger);
	}

	.thisYear .statsBox {
		--box-background: linear-gradient(133.14deg, rgba(33, 41, 115, 0.5) 3.72%, rgba(64, 10, 65, 0.5) 74.19%);
		--box-border: var(--statsbox-thisyear-border);
		--box-text: var(--statsbox-thisyear-text);

		position: relative;
		left: calc(var(--size-medium) * -1);
		--box-padding-h: var(--size-large);
	}

	// Override label colors.
	.statsBoxLabel {
		--box-label-background: var(--statsbox-label-background);
		--box-label-text: var(--statsbox-label-text);
		--box-label-border: var(--statsbox-label-border);

		text-transform: uppercase;
		font-family: "Roboto Mono";
		font-weight: 500;
		font-size: 0.75em;
	}

	@include for-mobile {
		font-size: 0.95em;

		// Move slightly upwards and add a separator.
		top: calc(var(--size-large) * -1);
		border-top: var(--separator) 1px solid;

		// Reposition the boxes to stack vertically.
		flex-direction: column;

		.lastYear .statsBox {
			left: unset;
		}

		.thisYear .statsBox {
			left: 50%;
		}

		// Move the label to the center.
		.thisYear .statsBox .statsBoxLabel {
			right: unset !important;
			left: 50% !important;
			transform: translate(-50%, -50%);
		}
	}
}
